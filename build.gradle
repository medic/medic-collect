import groovy.json.JsonBuilder
import groovy.json.JsonSlurper

buildscript {
  repositories {
    mavenCentral()
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.0'
  }
}

apply plugin: 'com.android.application'

final boolean IS_TRAVIS = System.env.TRAVIS == 'true'

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    // Disable compiler warnings - most of them come from ODK and
    // are quite noisy
    options.compilerArgs << '-nowarn'
  }
}

repositories {
  google()
  maven { url 'https://staging.dev.medicmobile.org/_couch/maven-repo' }
  flatDir { dirs 'libs' }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'bikramsambat:bikram-sambat:1.0.0'
  compile 'bikramsambat:bikram-sambat-android:1.0.0@aar'
}

def getVersionCode = {
  int versionCode = 1
  if(System.env.TRAVIS == 'true' && System.env.TRAVIS_TAG && System.env.TRAVIS_TAG.startsWith('v')) {
    def versionParts = System.env.TRAVIS_TAG.split(/[\.v]/)

    if (versionParts.length != 4)
      throw new RuntimeException("Unexpected version number - should be of formatted as 'v0.0.0', but was: $System.env.TRAVIS_TAG")

    versionParts = versionParts.drop(1).collect { Integer.parseInt(it) }

    if (versionParts[1] > 999 || versionParts[2] > 999)
      throw new RuntimeException('Version part greater than 999 not allowed.')

    versionCode = (1000 * 1000 * versionParts[0]) + 1000 * versionParts[1] + versionParts[2]
    if (versionCode > 2100000000 / 10)
      throw new RuntimeException('versionCode bigger than max allowed by Google Play.')
  }

  return versionCode
}

def getVersionName = {
  System.env.TRAVIS_TAG ?: 'SNAPSHOT'
}

android {
  defaultConfig {
    versionCode getVersionCode()
    versionName getVersionName()
    archivesBaseName = "medic-collect-" + versionName
  }

  applicationVariants.all {
    // TODO make this default to false, except for nepali flavours
    buildConfigField "boolean", "BIKRAM_SAMBAT_DATES", "Boolean.parseBoolean(\"${System.env.BIKRAM_SAMBAT}\")";
  }

  flavorDimensions 'brand'
  productFlavors {
    base {
      // we will not create project-specific src directories
      // for `base` - it will use the defaults in
      // src/main
    }
    demo {
      versionName = android.defaultConfig.versionName + "-demo"
      applicationId = 'org.medicmobile.collect.android.demo'
    }
    intrahealthsenegal {
      versionName = android.defaultConfig.versionName + "-seda"
      applicationId = 'org.medicmobile.collect.android.intrahealthsenegal'
    }
    amrefsenegal {
      versionName = android.defaultConfig.versionName + "-amrefsenegal"
      applicationId = 'org.medicmobile.collect.android.amrefsenegal'
    }
    queens {
      versionName = android.defaultConfig.versionName + "-queens"
      applicationId = 'org.medicmobile.collect.android.queens'
    }
    strongminds {
      versionName = android.defaultConfig.versionName + "-strongminds"
      applicationId = 'org.medicmobile.collect.android.strongminds'
    }
    ipasnigeria {
      versionName = android.defaultConfig.versionName + "-ipasnigeria"
      applicationId = 'org.medicmobile.collect.android.ipasnigeria'
    }
    christianaidsr {
      versionName = android.defaultConfig.versionName + "-christianaidsr"
      applicationId = 'org.medicmobile.collect.android.christianaidsr'
    }
    standard {
      versionName = android.defaultConfig.versionName + "-standard"
      applicationId = 'org.medicmobile.collect.android.standard'
    }
    mdharuracha {
      versionName = android.defaultConfig.versionName + "-mdharuracha"
      applicationId = 'org.medicmobile.collect.android.mdharuracha'
    }
    mdharurascdsc {
      versionName = android.defaultConfig.versionName + "-mdharurascdsc"
      applicationId = 'org.medicmobile.collect.android.mdharurascdsc'
    }
    mdharuradev {
      versionName = android.defaultConfig.versionName + "-mdharuradev"
      applicationId = 'org.medicmobile.collect.android.mdharuradev'
    }
    mdharurachadev {
      versionName = android.defaultConfig.versionName + "-mdharurachadev"
      applicationId = 'org.medicmobile.collect.android.mdharurachadev'
    }
    mdharurascdscdev {
      versionName = android.defaultConfig.versionName + "-mdharurascdscdev"
      applicationId = 'org.medicmobile.collect.android.mdharurascdscdev'
    }
    mdharurahebsdev {
      versionName = android.defaultConfig.versionName + "-mdharurahebsdev"
      applicationId = 'org.medicmobile.collect.android.mdharurahebsdev'
    }
    mdharurahebsfp {
      versionName = android.defaultConfig.versionName + "-mdharurahebsfp"
      applicationId = 'org.medicmobile.collect.android.mdharurahebsfp'
    }
    mdharurahebsscdsc {
      versionName = android.defaultConfig.versionName + "-mdharurahebsscdsc"
      applicationId = 'org.medicmobile.collect.android.mdharurahebsscdsc'
    }
  }
  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }
    demo.setRoot('../medic-projects/_medic-collect-flavors/demo')
    intrahealthsenegal.setRoot('../medic-projects/_medic-collect-flavors/intrahealthsenegal')
    amrefsenegal.setRoot('../medic-projects/_medic-collect-flavors/amrefsenegal')
    queens.setRoot('../medic-projects/_medic-collect-flavors/queens')
    strongminds.setRoot('../medic-projects/_medic-collect-flavors/strongminds')
    ipasnigeria.setRoot('../medic-projects/_medic-collect-flavors/ipas-nigeria')
    christianaidsr.setRoot('../medic-projects/_medic-collect-flavors/christian-aid-sr')
    standard.setRoot('../medic-projects/_medic-collect-flavors/standard')
    mdharuracha.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-cha')
    mdharurascdsc.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-scdsc')
    mdharuradev.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-dev')
    mdharurachadev.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-cha-dev')
    mdharurascdscdev.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-scdsc-dev')
    mdharurahebsdev.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-hebs-dev')
    mdharurahebsfp.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-hebs-fp')
    mdharurahebsscdsc.setRoot('../medic-projects/_medic-collect-flavors/cdc-mohke-dsru-hebs-scdsc')
  }
  compileSdkVersion 22
  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/DEPENDENCIES'
  }

  lintOptions {
    abortOnError false
  }

  signingConfigs {
    release {
      storeFile file(System.env.ANDROID_KEYSTORE_PATH ?: signingConfigs.debug.storeFile)
      storePassword System.env.ANDROID_KEYSTORE_PASSWORD
      keyAlias System.env.ANDROID_KEY_ALIAS
      keyPassword System.env.ANDROID_KEY_PASSWORD
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFile getDefaultProguardFile('proguard-android.txt')
      signingConfig signingConfigs.release
    }
  }

  dexOptions {
    if(IS_TRAVIS) {
      // Default dex heap size seems to be 1GB.  On travis,
      // this can lead to out-of-memory: preDex<Flavor>Debug
      // tasks fail with error code 137.
      // There may also be multiple processes dexing
      // simultaneously, so RAM usage will likely be 4*maxHeapSize

      // Decrease the max heap size for dexing on travis:
      javaMaxHeapSize "512M"
    }
  }
}

android.applicationVariants.all { variant ->
  variant.mergeAssets.doLast {
    if(System.env.MEDIC_COLLECT_PASSWORD) {
      def assetsDir = "$project.buildDir/intermediates/assets/$variant.dirName"
      def collectConfigFile = new File(assetsDir, 'collect.json')
      if(collectConfigFile.exists()) {
        def collectConfig = new JsonSlurper().parse(collectConfigFile)
        collectConfig.general_preferences.password = System.env.MEDIC_COLLECT_PASSWORD
        collectConfigFile.text = new JsonBuilder(collectConfig).toPrettyString()
      }
    }
  }
}
